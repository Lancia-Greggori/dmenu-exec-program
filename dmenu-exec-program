#!/bin/sh

set -eu

[ -z "${DISPLAY+x}" ] && echo 'X server not found' && exit 1

PROGRAM_NAME="$(basename "$0")"

print_help(){
	
	cat <<EOF
Usage: $PROGRAM_NAME [Options]

Available options:

	-i		dmenu match case insensitive
	-h,--help	print this help menu
	
EOF
}

CASE_CONDITION=''

[ -z "$*" ] || case "$*" in

	-i) CASE_CONDITION='-i' ;;

	-h|--help) print_help && exit 0 ;;

	*) print_help && exit 1 ;;

esac

CONFIG_FILE='.fpalias'

if [ ! -e "$HOME/$CONFIG_FILE" ]; then

	echo "no $CONFIG_FILE file found" | dmenu 
	exit 1

elif grep SPACE "$HOME/$CONFIG_FILE" 1>/dev/null; then

	echo 'bad configuration file: no "SPACE" allowed' | dmenu
	exit 1

fi

# Clear any previous aliases
for command_alias in $(alias | cut -d'=' -f1 | cut -d' '  -f2); do 
	
	unalias "$command_alias"

done

TMP_FILE="$PROGRAM_NAME.$PPID"

#ignore any lines that begin with a comment, space or just empty lines
grep -Ev '^([# ]|$)' "$HOME/$CONFIG_FILE" > "$TMP_FILE"

while read -r line; do

	ALIAS="$(echo "$line" | cut -d',' -f1 | sed 's/ /SPACE/g')"
	COMMAND="$(echo "$line" | cut -d',' -f2)"
	alias "$ALIAS=$COMMAND"

done < "$TMP_FILE"

rm "$TMP_FILE"

eval "$(alias | cut -d'=' -f1 | cut -d' ' -f2 | sed 's/SPACE/ /g' | dmenu $CASE_CONDITION | sed 's/ /SPACE/g')"
