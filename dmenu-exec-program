#!/bin/sh

set -eu

[ -z "${DISPLAY+x}" ] && echo 'X server not found' && exit 1

print_help(){
	
	cat <<EOF
Usage: $(basename "$0") [Options]

Available options:

	-i		dmenu match case insensitive
	-h,--help	print this help menu
	
EOF
}

CASE_CONDITION=''
[ -z "$*" ] || case "$*" in

	-i) CASE_CONDITION='-i' ;;

	-h|--help) print_help && exit 0 ;;

	*) print_help && exit 2 ;;

esac

CONFIG_FILE='.fpalias'
if [ ! -e "$HOME/$CONFIG_FILE" ]; then

	echo "no $CONFIG_FILE file found" | dmenu 
	exit 2

elif grep SPACE "$HOME/$CONFIG_FILE"; then

	echo 'bad configuration file format: no "SPACE" allowed' | dmenu
	exit 3

fi

# Clear any previous aliases
for command_alias in $(alias | cut -d'=' -f1 | cut -d' '  -f2); do 
	
	unalias "$command_alias"

done

IFS='
' 

# I wanted to use a while read loop, but the problem is that aliases defined in the
# while read loop are only local to that loop and are not brought over into the script
# after the loop ends
for line in $(grep -v '^[# $]' "$HOME/$CONFIG_FILE"); do 

	ALIAS="$(echo "$line" | cut -d',' -f1 | sed 's/ /SPACE/g')"
	COMMAND="$(echo "$line" | cut -d',' -f2)"
	alias "$ALIAS=$COMMAND"

done

eval "$(alias | cut -d'=' -f1 | cut -d' ' -f2 | sed 's/SPACE/ /g' | dmenu $CASE_CONDITION | sed 's/ /SPACE/g')"
